"use strict"
/**
 * 
 * @function randomDamage creates a random number 1-10
 * to damage players 1 and 2 
 */
    const randomDamage = _ => {
        let max = 10;
        let min = 1;
        return Math.floor(Math.random() * (max - min + 1)) + min;  
    }

    /**
     * 
     * @param {number}  op1
     * @param {number}  opt2
     * 
     * @function chooseOption generates a random number 0 or 1 then chooses opt1 which return true
     * or opt2 which returns false
     */
    const chooseOption = (opt1, opt2) => {
        let min = 0;
        let max = 1;
        let randNum = Math.floor(Math.random() * (max - min + 1)) + min;

        return randNum === 0 ? opt1 : opt2;
    }

    /**
     * 
     * @param {number} health 
     * @function attackPlayer is used to attack and apply the damage generated by randomDamage function
     * to the both players 
     */
    const attackPlayer = function(health) {
        return health -= randomDamage();
    }


    /**
     * 
     * @param {string} player 
     * @param {number} health 
     * 
     * @function logHealth calls both player and their health and then logs out there current health
     */
    const logHealth = (player, health) => {
        console.log(`${player} health: ${health}`);
    }

    /**
     * 
     * @param {boolean} winner 
     * @param {boolean} loser 
     * 
     * @function logDeath logs out the winner and loser based on which players health reaches zero first
     */
    const logDeath = (winner, loser) => {
        console.log(`${winner} has defeated ${loser}`);
    }

    /**
     * 
     * @param {number} health
     * 
     * @function isDead looks at the health of both players and uses and if statement to see
     * if either ones health hit zero and then returns true else returns false
     */
    const isDead = (health) => {
        if (health <= 0) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * 
     * @param {string} player1 
     * @param {string} player2 
     * @param {number} player1Health 
     * @param {number} player2Health 
     * 
     * @function fight is used to loop the whole fight while both players still have health.
     * 
     * we call attacker and give it the value of chooseOption.
     * then we have three if statements, the first see if attacker choose the first player
     * then logs out 
     */
    function fight(player1, player2, player1Health, player2Health) {
        while (true) {
            const attacker = chooseOption(player1, player2);
            
            if (attacker === player1) {
                player2Health = attackPlayer(player2Health);
                logHealth(player2, player2Health);
                
            } 

            if (isDead(player2Health) === true) {
                logDeath(player1, player2);
                break;
            } else {
                player1Health = attackPlayer(player1Health);
                logHealth(player1, player1Health);
                
            }

            if (isDead(player1Health) === true) {
                logDeath(player2, player1);
                break;
                
            }
        
        }
    }

